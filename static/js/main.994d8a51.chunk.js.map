{"version":3,"sources":["reportWebVitals.ts","redux/type.ts","redux/reducers/authReducer.ts","redux/reducers/bookReducer.ts","redux/reducers/categoryReducer.ts","redux/reducers/userReducer.ts","redux/reducers/authorReducer.ts","redux/reducers/index.ts","redux/store.ts","utils/axios.utils.ts","pages/login/LoginPage.tsx","redux/actions/authAction.ts","pages/home/Home.tsx","pages/users/UserMenu.tsx","pages/books/BookMenu.tsx","utils/apiService.utils.ts","redux/actions/bookAction.ts","redux/actions/authorAction.ts","redux/actions/categoryAction.ts","redux/actions/userAction.ts","components/pagination/PaginationComponent.tsx","pages/books/BookList.tsx","pages/books/NewBook.tsx","pages/authors/AuthorMenu.tsx","pages/categories/CategoryMenu.tsx","pages/books/UpdateBook.tsx","routes.js","pages/users/UserList.tsx","pages/users/NewUser.tsx","pages/users/UpdateUser.tsx","pages/books/bookInfo/BookInfo.tsx","pages/authors/AuthorList.tsx","pages/authors/NewAuthor.tsx","pages/authors/AuthorInfo.tsx","pages/authors/UpdateAuthor.tsx","pages/categories/CategoryList.tsx","pages/categories/NewCategory.tsx","pages/categories/CategoryInfo.tsx","pages/categories/UpdateCategory.tsx","components/common/NavBar.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","USERS_LOADED","USER_CREATE","USER_UPDATE","USER_DELETE","USER_LOADED","BOOKS_LOADED","BOOK_CREATE","BOOK_UPDATE","BOOK_DELETE","BOOK_LOADED","AUTHORS_LOADED","AUTHOR_CREATE","AUTHOR_UPDATE","AUTHOR_DELETE","AUTHOR_LOADED","CATEGORIES_LOADED","CATEGORY_CREATE","CATEGORY_UPDATE","CATEGORY_DELETE","CATEGORY_LOADED","initialState","token","user","isLogin","authReducer","state","action","type","Object","assign","payload","list","pagination","book","bookReducer","data","newList","filter","id","category","categoryReducer","userReducer","author","authorReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","instance","axios","create","baseURL","headers","LoginPage","props","useState","username","password","setUser","isValidate","setIsValidate","dispatch","useDispatch","useSelector","handleChange","e","target","name","value","useEffect","console","log","post","res","history","push","catch","err","login","to","className","md","onSubmit","preventDefault","placeholder","onInput","xs","color","style","width","active","tabIndex","HomePage","UserMenu","BookMenu","authHeader","getState","loadAPI","url","params","method","options","requestOptions","methodName","toUpperCase","configReq","Promise","resolve","reject","getAllBook","pageNumber","status","response","getBook","createBook","updateBook","deleteBook","getAllAuthors","getAuthor","createAuthor","updateAuthor","deleteAuthor","getAllCategories","getCategory","createCategory","updateCategory","deleteCategory","getAllUser","createUser","updateUser","PaginationComponent","totalPages","setTotalPages","items","getContentOfPage","a","toString","Pagination","Item","currentPage","onClick","Prev","disabled","Next","BookList","setCurrentPage","loading","setLoading","getBookListContent","length","scopedSlots","item","xl","fields","key","_classes","label","hover","striped","itemsPerPage","clickableRows","onRowClick","NewBook","description","price","year","website","birthday","cover","publisher","categories","setBook","authorId","authorName","authorBirthday","authorCover","error","setError","handleBookChange","newValue","parseFloat","handleAuthorChange","handleCategoryChange","newCate","map","cate","keys","includes","handleSubmit","validate","values","val","JSON","stringify","sm","row","htmlFor","invalid","onChange","size","shape","goBack","Author","CategoryMenu","UpdateBook","newvalue","update","match","routes","path","component","exact","User","getUsersListContent","role","handleUserChange","newUser","getUser","Book","handleDeleteBook","getBookInfo","lg","index","reduce","accum","join","getAuthorListContent","setAuthor","newAuthor","handleDeleteAuthor","getAuthorInfo","books","Category","getCategoriesListContent","activePage","setCategory","handleDeleteCategory","getCategoryInfo","NavBar","expandable","inNav","inline","localStorage","clear","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.994d8a51.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SET = \"set\";\n\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const USERS_LOADED = \"USERS_LOADED\";\nexport const USER_CREATE = \"USER_CREATE\";\nexport const USER_UPDATE = \"USER_UPDATE\";\nexport const USER_DELETE = \"USER_DELETE\";\nexport const USER_LOADED = \"USER_LOADED\";\n\nexport const BOOKS_LOADED = \"BOOKS_LOADED\";\nexport const BOOK_CREATE = \"BOOK_CREATE\";\nexport const BOOK_UPDATE = \"BOOK_UPDATE\";\nexport const BOOK_DELETE = \"BOOK_DELETE\";\nexport const BOOK_LOADED = \"BOOK_LOADED\";\n\nexport const AUTHORS_LOADED = \"AUTHORS_LOADED\";\nexport const AUTHOR_CREATE = \"AUTHOR_CREATE\";\nexport const AUTHOR_UPDATE = \"AUTHOR_UPDATE\";\nexport const AUTHOR_DELETE = \"AUTHOR_DELETE\";\nexport const AUTHOR_LOADED = \"AUTHOR_LOADED\";\nexport const AUTHOR_SEARCHED_BY_NAME = \"AUTHOR_SEARCHED_BY_NAME\";\n\nexport const CATEGORIES_LOADED = \"CATEGORIES_LOADED\";\nexport const CATEGORY_CREATE = \"CATEGORY_CREATE\";\nexport const CATEGORY_UPDATE = \"CATEGORY_UPDATE\";\nexport const CATEGORY_DELETE = \"CATEGORY_DELETE\";\nexport const CATEGORY_LOADED = \"CATEGORY_LOADED\";\nexport const CATEGORY_SEARCHED_BY_NAME = \"CATEGORY_SEARCHED_BY_NAME\";","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../type';\n\nconst initialState: any = {\n  token: null,\n  user: null,\n  isLogin: false\n};\n\nconst authReducer = (state = initialState, action: any) => {\n  switch(action.type) {\n    case LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        ...action.payload,\n          isLogin: true\n      });\n    case LOGIN_FAIL:\n    case LOGOUT: \n      return Object.assign({}, state, initialState);\n  }\n\n  return state;\n}\n\nexport default authReducer;","import { Book } from '../../types/Model';\nimport { BOOKS_LOADED, BOOK_CREATE, BOOK_DELETE, BOOK_LOADED, BOOK_UPDATE } from '../type';\n\nconst initialState = {\n  list: [],\n  pagination: null,\n  book: null,\n};\n\nconst bookReducer = (state = initialState, action: any) => {\n  switch( action.type ) {\n    case BOOKS_LOADED:\n      return Object.assign({}, state, {\n        list: action.payload.data,\n        pagination: action.payload.pagination\n      });\n    case BOOK_LOADED:\n      return Object.assign({}, state, {\n        book: action.payload\n      });\n    case BOOK_DELETE:\n      const newList = state.list.filter((book: Book) => book.id !== action.payload);\n      return Object.assign({}, state, {\n        list: newList\n      });\n    case BOOK_UPDATE:\n    case BOOK_CREATE:\n      return Object.assign({}, state, {\n        list: [\n          ...state.list,\n          action.payload\n        ]\n      });\n    default:\n      return state;\n  }\n}\n\nexport default bookReducer;","import { Category } from '../../types/Model';\nimport { CATEGORIES_LOADED, CATEGORY_CREATE, CATEGORY_LOADED, CATEGORY_DELETE, CATEGORY_UPDATE } from '../type';\n\nconst initialState = {\n  list: [],\n  category: null,\n};\n\nconst categoryReducer = (state = initialState, action: any) => {\n  switch( action.type ) {\n    case CATEGORIES_LOADED:\n      return Object.assign({}, state, {\n        list: action.payload\n      });\n    case CATEGORY_LOADED:\n      return Object.assign({}, state, {\n        category: action.payload\n      });\n    case CATEGORY_CREATE:\n    case CATEGORY_UPDATE:\n      return Object.assign({}, state, {\n        list: [\n          ...state.list,\n          action.payload\n        ]\n      })\n    case CATEGORY_DELETE:\n      const newList = state.list.filter((category: Category) => category.id !== action.payload);\n      return Object.assign({}, state, {\n        list: newList\n      })\n    default:\n      return state;\n  }\n}\n\nexport default categoryReducer;","import { User } from '../../types/Model';\nimport { USERS_LOADED, USER_LOADED, USER_CREATE, USER_DELETE, USER_UPDATE } from '../type';\n\nconst initialState = {\n  pagination: null,\n  list: [],\n  user: null,\n};\n\nconst userReducer = (state = initialState, action: any) => {\n  switch( action.type ) {\n    case USERS_LOADED:\n      return Object.assign({}, state, {\n        pagination: action.payload.pagination,\n        list: action.payload.data\n      });\n    case USER_LOADED:\n      return Object.assign({}, state, {\n        user: action.payload\n      });\n    case USER_CREATE:\n    case USER_UPDATE:\n      return Object.assign({}, state, {\n        list: [\n          ...state.list,\n          action.payload\n        ]\n      })\n    case USER_DELETE:\n      const newList = state.list.filter((user: User) => user.id !== action.payload);\n      return Object.assign({}, state, {\n        list: newList\n      })\n    default:\n      return state;\n  }\n}\n\nexport default userReducer;","import { Author } from '../../types/Model';\nimport { AUTHORS_LOADED, AUTHOR_CREATE, AUTHOR_LOADED, AUTHOR_DELETE, AUTHOR_UPDATE } from '../type';\n\nconst initialState = {\n  list: [],\n  author: null,\n};\n\nconst authorReducer = (state = initialState, action: any) => {\n  switch( action.type ) {\n    case AUTHORS_LOADED:\n      return Object.assign({}, state, {\n        list: action.payload\n      });\n    case AUTHOR_LOADED:\n      return Object.assign({}, state, {\n        author: action.payload\n      });\n    case AUTHOR_CREATE:\n    case AUTHOR_UPDATE:\n      return Object.assign({}, state, {\n        list: [\n          ...state.list,\n          action.payload\n        ]\n      });\n    case AUTHOR_DELETE:\n      const newList = state.list.filter((author: Author) => author.id !== action.payload);\n      return Object.assign({}, state, {\n        list: newList\n      })\n    default:\n      return state;\n  }\n}\n\nexport default authorReducer;","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport bookReducer from './bookReducer';\nimport categoryReducer from './categoryReducer';\nimport userReducer from './userReducer';\nimport authorReducer from './authorReducer';\n\nexport const rootReducer = combineReducers({\n  authReducer: authReducer,\n  bookReducer: bookReducer,\n  categoryReducer: categoryReducer,\n  userReducer: userReducer,\n  authorReducer: authorReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from '../redux/reducers/index';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\nexport default store;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://nga-book-api.herokuapp.com/api/v1',\n  headers: {\n    'Content-Type': 'application/json;charset=utf8',\n  }\n});\n\nexport default instance;","import React, { useState, useEffect, FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../redux/actions/authAction';\nimport { Link, Redirect } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\n\nconst LoginPage: FC = (props) => {\n\n  const [user, setUser] = useState({\n    username: '',\n    password: ''\n  });\n  const [isValidate, setIsValidate] = useState(false);\n\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin);\n\n  const validate = (username: string, password: string) => {\n  }\n\n  function handleChange(e: React.ChangeEvent<any>): void {\n    const { name, value } = e.target;\n    setUser(user => ({ ...user, [name]: value }))\n  }\n\n  function handleSubmit(e: React.ChangeEvent<any>): void {\n    e.preventDefault();\n\n    setIsValidate(user.username !== \"\" || user.password !== \"\");\n     if (!isValidate) {\n      console.log(\"you have to enter the login!!\");\n    }\n  }\n\n  useEffect(() => {\n    if (isValidate) {\n      dispatch(login(user, props));\n    }\n  }, [isValidate]);\n\n  return (\n    <>\n      {\n        !isLogin\n          ? (\n            <div className=\"c-app c-default-layout flex-row align-items-center\">\n              <CContainer>\n                <CRow className=\"justify-content-center\">\n                  <CCol md=\"8\">\n                    <CCardGroup>\n                      <CCard className=\"p-4\">\n                        <CCardBody>\n                          <CForm onSubmit={handleSubmit}>\n                            <h1>Login</h1>\n                            <p className=\"text-muted\">Sign In to your account</p>\n                            <CInputGroup className=\"mb-3\">\n                              <CInput type=\"text\" name=\"username\" value={user.username} placeholder=\"Username\" onInput={handleChange} />\n                            </CInputGroup>\n                            <CInputGroup className=\"mb-4\">\n                              <CInput type=\"password\" name=\"password\" value={user.password} placeholder=\"Password\" onInput={handleChange} />\n                            </CInputGroup>\n                            <CRow>\n                              <CCol xs=\"6\">\n                                <CButton type=\"submit\" color=\"primary\" className=\"px-4\">Login</CButton>\n                              </CCol>\n                              <CCol xs=\"6\" className=\"text-right\">\n                                <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\n                              </CCol>\n                            </CRow>\n                          </CForm>\n                        </CCardBody>\n                      </CCard>\n                      <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                        <CCardBody className=\"text-center\">\n                          <div>\n                            <h2>Sign up</h2>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                              labore et dolore magna aliqua.</p>\n                            <Link to=\"/register\">\n                              <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\n                            </Link>\n                          </div>\n                        </CCardBody>\n                      </CCard>\n                    </CCardGroup>\n                  </CCol>\n                </CRow>\n              </CContainer>\n            </div>\n          ) \n          : <Redirect to=\"/home\" />\n      }\n    </>\n  );\n};\n\nexport default LoginPage;","import { LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../type';\nimport axios from '../../utils/axios.utils';\n\nexport const login = ( data: any, props: any ) => ( dispatch: any ) => {\n  console.log(\"login\");\n  return axios.post(\n    '/auths/login',\n    {\n      username: data.username,\n      password: data.password\n    })\n    .then(res => {      \n      dispatch(\n        {\n          type: LOGIN_SUCCESS,\n          payload: {\n            token: res.data.token,\n            user: res.data.user\n          }\n        }\n      )\n      props.history.push('/home');\n    })\n    .catch(err => dispatch(\n      {\n        type: LOGIN_FAIL,\n        payload: \"Login fail!\"\n      }\n    ));\n};\n\nexport const logout = () => (dispatch: any) => {\n  localStorage.clear();\n  return dispatch({\n    type: LOGOUT\n  })\n};\n","import React, { FC } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst HomePage: FC<{history: any}> = (props) => {\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin); \n\n  return (\n    <>\n      <h1>Menu:</h1>\n      {\n        isLogin\n        ? (\n          <ul>\n            <li>\n              <Link to=\"/users\">User</Link>\n            </li>\n            <li>\n              <Link to=\"/books\">Book</Link>\n            </li>\n            <li>\n              <Link to=\"/authors\">Author</Link>\n            </li>\n            <li>\n              <Link to=\"/categories\">Category</Link>\n            </li>\n          </ul>\n          )\n        : <Redirect to=\"/\" />\n      }\n      \n    </>\n  );\n};\n\nexport default HomePage;","import React, { useState, FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\n\nconst UserMenu: FC = (props) => {\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin); \n\n  return (\n    <>\n      <h1>UserMenu</h1>\n      {\n        isLogin\n          ? (\n            <ul>\n              <li>\n                <Link to=\"/users/all\">Get All Users</Link>\n              </li>\n              <li>\n                <Link to=\"/users/new\">Add a new user</Link>\n              </li>\n            </ul>)\n          : <Redirect to=\"/\" />\n      }\n    </>\n  );\n};\n\nexport default UserMenu;","import React, { FC } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllBook } from '../../redux/actions/bookAction';\n\nconst BookMenu: FC = (props) => {\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin); \n\n  return (\n    <>\n      <h1>BookMenu</h1>\n      {\n        isLogin\n          ? (\n            <ul>\n              <li>\n                <Link to=\"/books/all\">Get All Books</Link>\n              </li>\n              <li>\n                <Link to=\"/books/new\">Add a new book</Link>\n              </li>\n            </ul>)\n          : <Redirect to=\"/\" />\n      }\n      \n    </>\n  );\n};\n\nexport default BookMenu;","import axios from './axios.utils';\nimport { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport store from '../redux/store';\n\nconst authHeader = () => {\n  const state = store.getState();\n  const token = store ? state.authReducer.token : null;\n  const isLogin = store ? state.authReducer.isLogin : false;\n  return {\n    'Authorization': (isLogin && token) ? `Bearer ${token}` : null\n  };\n}\n\nconst configReq = (options: object, methodName: string): AxiosRequestConfig => {\n  switch (methodName.toUpperCase()) {\n    case 'PUT':\n      return {\n        method: 'PUT',\n        ...options\n      }\n    case 'DELETE':\n      return {\n        method: 'DELETE',\n        ...options\n      }\n    case 'POST':\n      return {\n        method: 'POST',\n        ...options\n      }\n    default: \n      return {\n        method: 'GET',\n        ...options\n      }\n  }\n}\n\nexport const loadAPI = (url: string, params: any, method: string) => {\n  let options = {\n    url: url,\n    headers: authHeader(),\n    params: null,\n    data: null\n  }\n\n  method == 'GET' ? options.params = params : options.data = params;\n\n  const requestOptions: AxiosRequestConfig = configReq(options, method);\n\n  return new Promise<AxiosResponse> ((resolve, reject)=>{\n    axios(requestOptions)\n    .then(res => {\n      resolve(res)})\n    .catch(reject);\n  });\n}","import { BOOKS_LOADED, BOOK_CREATE, BOOK_LOADED, BOOK_DELETE, BOOK_UPDATE } from '../type';\nimport { loadAPI } from '../../utils/apiService.utils';\n\nexport const getAllBook = (pageNumber: string) => (dispatch: any) => {\n  const params = {\n    'pageNumber': pageNumber,\n    'pageSize': 10\n  }\n  return loadAPI('/books?',params, 'GET')\n          .then( res => {\n            dispatch({type: BOOKS_LOADED, payload: res.data});\n            return res.status;\n          })\n          .catch( err => err.response.status);\n}\n\nexport const getBook = (id: number) => (dispatch: any) => {\n  return loadAPI(`/books/${id}`, null, 'GET')\n          .then(res => {\n            dispatch({type: BOOK_LOADED, payload: res.data});\n            return res.status;\n          })\n          .catch( err => err.response.status);\n}\n\nexport const createBook = (data: any) => (dispatch: any) => {\n  return loadAPI('/books/', data, 'POST')\n          .then((res) => {\n            dispatch({type: BOOK_CREATE, payload: res.data});\n            return res.status;\n          })\n          .catch(err => err.response.status);\n}\n\nexport const updateBook = (data: any, id: number) => (dispatch: any) => {\n  return loadAPI(`/books/${id}`, data, 'PUT')\n          .then(res => {\n            dispatch({type: BOOK_UPDATE, payload: res.data});\n            return res.status;\n          })\n          .catch(err => err.response.status);\n}\n\nexport const deleteBook = (id: number) => (dispatch: any) => {\n  return loadAPI(`/books/${id}`, null, 'DELETE')\n          .then(res => {\n            dispatch({type: BOOK_DELETE, payload: id});\n            return res.status;\n          })\n          .catch(err => err.response.status);\n}\n","import { AUTHORS_LOADED, AUTHOR_CREATE, AUTHOR_LOADED, AUTHOR_DELETE, AUTHOR_UPDATE } from '../type';\nimport { loadAPI }  from '../../utils/apiService.utils';\n\nexport const getAllAuthors = (pageNumber: string) => (dispatch: any) => {\n  const params = {\n    'pageNumber': pageNumber,\n    'pageSize': 10\n  }\n  return loadAPI('/authors',params, 'GET')\n          .then( res => {\n            dispatch({type: AUTHORS_LOADED, payload: res.data});\n            return res.status;\n          })\n          .catch( err => err.response.status);\n}\n\nexport const getAuthor = (id: number) => (dispatch: any) => {\n  return loadAPI(`/authors/${id}`,null, 'GET')\n          .then( res => {\n            dispatch({type: AUTHOR_LOADED, payload: res.data});\n            return res.status;\n          })\n          .catch( err => err.response.status);\n}\n\nexport const createAuthor = (data: any) => (dispatch: any) => {\n  return loadAPI('/authors/',data, 'POST')\n          .then( res => {\n            dispatch({type: AUTHOR_CREATE, payload: res.data});\n            return res.status;\n          })\n          .catch( err => err.response.status);\n}\n\nexport const updateAuthor = (data: any, id: number) => (dispatch: any) => {\n  return loadAPI(`/authors/${id}`,data, 'PUT')\n          .then( res => {\n            dispatch({type: AUTHOR_UPDATE, payload: res.data});\n            return res.status;\n          })\n          .catch( err => err.response.status);\n}\n\nexport const deleteAuthor = (id: number) => (dispatch: any) => {\n  return loadAPI(`/authors/${id}`, null, 'DELETE')\n          .then( res => {\n            dispatch({type: AUTHOR_DELETE, payload: id});\n            return res.status;\n          })\n          .catch( err => err.response.status);\n}","import { CATEGORIES_LOADED, CATEGORY_CREATE, CATEGORY_LOADED, CATEGORY_DELETE, CATEGORY_UPDATE } from '../type';\nimport {loadAPI} from '../../utils/apiService.utils';\n\nexport const getAllCategories = (pageNumber: string) => (dispatch: any) => {\n  const params = {\n    'pageNumber': pageNumber,\n    'pageSize': 10\n  }\n  return loadAPI('/categories/', params, 'GET')\n          .then(res => {\n            dispatch({type: CATEGORIES_LOADED, payload: res.data});\n            return res.status;\n          })\n          .catch(err => err.response.status);\n}\n\nexport const getCategory = (id: number) => (dispatch: any) => {\n  return loadAPI(`/categories/${id}`, null, 'GET')\n          .then(res => {\n            dispatch({ type: CATEGORY_LOADED, payload: res.data });            \n            return res.status;\n          })\n          .catch( err => err.response.status);\n}\n\nexport const createCategory = (data: any) => (dispatch: any) => {\n  return loadAPI('/categories/', data, 'POST')\n          .then(res => {\n            dispatch({type: CATEGORY_CREATE, payload: res.data});\n            return res.status;\n          })\n          .catch(err => err.response.status);\n}\n\nexport const updateCategory = (data: any, id: number) => (dispatch: any) => {\n  return loadAPI(`/categories/${id}`, data, 'PUT')\n          .then(res => {\n            dispatch({type: CATEGORY_UPDATE, payload: res.data});\n            return res.status;\n          })\n          .catch(err => err.response.status);\n}\n\nexport const deleteCategory = (id: number) => (dispatch: any) => {\n  return loadAPI(`/categories/${id}`, null, 'DELETE')\n          .then(res => {\n            dispatch({type: CATEGORY_DELETE, payload: id});\n            return res.status;\n          })\n          .catch(err => err.response.status);\n}","import { USERS_LOADED, USER_LOADED, USER_CREATE, USER_DELETE, USER_UPDATE } from '../type';\nimport {loadAPI} from '../../utils/apiService.utils';\nimport { User } from '../../types/Model';\n\nexport const getAllUser = (pageNumber: string) => (dispatch: any) => {\n  const params = {\n    'pageSize': 5,\n    'pageNumber': pageNumber\n  }\n  return loadAPI('/users?', params, 'GET')\n          .then(res => {\n            dispatch({type: USERS_LOADED, payload: res.data});\n            return res.status;\n          })\n          .catch(err => err.response.status);\n}\n\nexport const getUser = (list: User[], id: number) => (dispatch: any): User => {\n  const user = list.filter((user: User) => user.id === id);\n  dispatch({ type: USER_LOADED, payload: user[0] });\n  return user[0];\n}\n\nexport const createUser = (data: User) => (dispatch: any) => {\n  return loadAPI('/users?', data, 'POST')\n          .then(res => {\n            dispatch({type: USERS_LOADED, payload: res.data});\n            return res.status;\n          })\n          .catch(err => err.response.status);\n}\n\nexport const updateUser = (data: User, id: number) => (dispatch: any) => {\n  return loadAPI(`/users/${id}`, data, 'PUT')\n          .then(res => {\n            dispatch({type: USER_UPDATE, payload: res.data});\n            return res.status;\n          })\n          .catch(err => err.response.status);\n}\n\nexport const deleteUser = (id: number) => (dispatch: any) => {\n  return loadAPI(`/users/${id}`, null, 'DELETE')\n          .then(res => {\n            dispatch({type: USER_DELETE, payload: id});\n            return res.status;\n          })\n          .catch(err => err.response.status);\n}","import React, { useState, useEffect, FC } from \"react\";\nimport Pagination from 'react-bootstrap/Pagination';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllAuthors } from \"../../redux/actions/authorAction\";\nimport { getAllBook } from '../../redux/actions/bookAction';\nimport { getAllCategories } from \"../../redux/actions/categoryAction\";\nimport { getAllUser } from \"../../redux/actions/userAction\";\nimport './PaginationComponent.css';\n\ninterface PaginationProps {\n  totalPages: number,\n  currentPage: number,\n  type: string\n}\n\nconst PaginationComponent: FC<PaginationProps> = (props) => {\n\n  const dispatch = useDispatch();\n  const [totalPages, setTotalPages] = useState<number>(1);\n\n  useEffect(() => {\n    if (totalPages !== props.totalPages) {\n      setTotalPages(props.totalPages);\n    }\n  }, [props.totalPages]);\n\n  const items = [];\n\n  const getContentOfPage = async (pageNumber: number) => {\n    switch (props.type.toUpperCase()) {\n      case 'USER':\n        await dispatch(getAllUser(pageNumber.toString()));\n        break;\n      case 'BOOK':\n        await dispatch(getAllBook(pageNumber.toString()));\n        break;\n      case 'AUTHOR':\n        await dispatch(getAllAuthors(pageNumber.toString()));\n        break;\n      case 'CATEGORY':\n        await dispatch(getAllCategories(pageNumber.toString()));\n        break;\n    }\n  }\n\n  for (let pageNumber = 1; pageNumber <= totalPages; pageNumber++) {\n    items.push(\n      <Pagination.Item\n        key={pageNumber}\n        active={pageNumber === props.currentPage}\n        onClick={() => getContentOfPage(pageNumber)}\n      >\n        {pageNumber}\n      </Pagination.Item>,\n    );\n  }\n  return (\n    <Pagination className=\"pagination--center\">\n      <Pagination.Prev\n        disabled={props.currentPage === 1}\n        onClick={() => getContentOfPage(props.currentPage - 1)}\n      />\n      {items}\n      <Pagination.Next\n        disabled={props.currentPage === totalPages}\n        onClick={() => getContentOfPage(props.currentPage + 1)}\n      />\n    </Pagination>\n  );\n}\n\nexport default PaginationComponent;","import React, { FC, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { getAllBook } from '../../redux/actions/bookAction';\nimport PaginationComponent from '../../components/pagination/PaginationComponent';\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CCardFooter\n} from '@coreui/react';\nimport { Book } from '../../types/Model';\n\nconst BookList: FC<{history: any}> = (props) => {\n  const dispatch = useDispatch();\n\n  const list = useSelector((state: any) => state.bookReducer.list);\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin);\n\n  const pagination = useSelector((state: any) => state.bookReducer.pagination);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const [loading, setLoading] = useState(true);\n\n  if ( pagination && currentPage !== pagination.currentPage ) {\n    setCurrentPage(pagination.currentPage);\n    setTotalPages(pagination.totalPages);\n  }\n\n  const getBookListContent = async () => {\n    const status = await dispatch(getAllBook(currentPage.toString()));\n    if (+status === 200 || list.length !== 0) {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getBookListContent();\n  }, [loading, dispatch]);\n\n  useEffect(() => {\n    if ( pagination  ) {\n      setCurrentPage(pagination.currentPage);\n      setTotalPages(pagination.totalPages);\n    }\n  }, [pagination, list]);\n\n  console.log(\"pagination: \", pagination);\n  console.log(\"list: \", list);\n  \n  \n\n  const scopedSlots = {\n    'author':\n      (item: Book) => ( \n        <td> {item.author.name} </td>\n      ),\n  }\n  const fields = [\n    { key: 'name', _classes: 'font-weight-bold' },\n    {key: 'author', label: \"Author\"},\n    'year',\n    'price'\n  ];\n  \n  return (\n    <>\n      {\n        (isLogin)\n        ? (\n          <CRow>\n            <CCol xl={12}>\n              <CCard>\n                <CCardHeader>\n                  <h1>Books List</h1>\n                </CCardHeader>\n                <CCardBody>\n                  <CDataTable\n                    items={list}\n                    fields={fields}\n                    scopedSlots={scopedSlots}\n                    hover\n                    loading={loading}\n                    striped\n                    itemsPerPage={5}\n                    clickableRows\n                    onRowClick={(item: Book) => props.history.push(`/books/${item.id}`)}\n                  />\n                </CCardBody>\n                <CCardFooter>\n                  <PaginationComponent type=\"book\" totalPages={totalPages} currentPage={currentPage} />\n                </CCardFooter>\n              </CCard>\n            </CCol>\n          </CRow>\n        )\n        : <Redirect to=\"/\" />\n      }\n    </>\n  );\n};\n\nexport default BookList;","import React, { useState, FC, useEffect } from 'react';\nimport { createBook } from '../../redux/actions/bookAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInvalidFeedback,\n  CInput,\n  CLabel,\n  CRow,\n} from '@coreui/react';\nimport { Book } from '../../types/Model';\nimport { BookErrorProps } from '../../types/Error';\n\nconst NewBook: FC<{history: any}> = (props) => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin)\n\n  const [isValidate, setIsValidate] = useState(false);\n  const [book, setBook] = useState<Book>({\n    name: \"\",\n    description: \"\",\n    price: 0.0,\n    year: 0,\n    author: {\n      id: 0,\n      name: \"\",\n      website: \"\",\n      birthday: \"\",\n      cover: \"\"\n    },\n    publisher: \"\",\n    cover: '',\n    categories: [{\n      id: 0,\n      name: \"\",\n      description: \"\"\n    }],\n  });\n\n  const [error, setError] = useState<BookErrorProps<boolean>> ({\n    name: false,\n    description: false,\n    price: false,\n    year: false,\n    authorId: false,\n    authorName: false,\n    authorBirthday: false,\n    authorCover: false,\n    publisher: false,\n    cover: false\n  })\n\n  const handleBookChange = (e: React.ChangeEvent<any>) => {\n    const {name, value} = e.target;\n    let newValue = (name === \"price\") \n            ? parseFloat(value)\n            : (name === \"year\")\n                ? +value\n                : value;\n    \n    setBook({\n      ...book,\n      [name]: newValue\n    });\n  }\n\n  const handleAuthorChange = (e: React.ChangeEvent<any>) => {\n    const {name, value} = e.target;\n    let newValue = (name === \"id\") ? +value : value;\n    setBook({\n      ...book,\n      author: {\n        ...book.author,\n        [name]: newValue\n      }\n    });\n  }\n\n  const handleCategoryChange = (e: React.ChangeEvent<any>) => {\n    const {name, value} = e.target;\n    let newValue = (name === \"id\") ? +value : value;\n    let newCate: any = book.categories;\n    newCate = newCate.length\n          ? (\n            newCate.map((cate: any) => {\n              if (!Object.keys(cate).includes(name)) {\n                return {\n                  ...cate,\n                  [name]: newValue\n                }\n              }\n              return cate;\n            })\n          )\n          : [\n            ...newCate,\n            {\n              [name]: newValue\n            }\n          ]\n\n    setBook({\n      ...book,\n      categories: newCate\n    });\n  }\n\n  const handleSubmit = async (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n    await validate(book);\n  }\n\n  const validate = async (book: Book) => {\n    setError({\n      name: book.name === null,\n      description: book.description === \"\",\n      price: book.price <= 0.0 && book.price === null,\n      year: book.year <= 0.0 && book.year === null,\n      authorId: book.author.id === 0 && book.author.id === null,\n      authorName: book.author.name === \"\",\n      authorBirthday: book.author.birthday === \"\",\n      authorCover: book.author.cover === \"\",\n      publisher: book.publisher === \"\",\n      cover: book.cover === \"\"\n    });\n    \n    setIsValidate(book !== null \n      && (Object.values(error)\n              .filter(val => !val)\n              .length !== 0)\n    )\n  }\n\n  const create = async () => {\n    const status = await dispatch(createBook(JSON.stringify(book)));\n    if (+status === 200) {\n      props.history.push(\"/books/all\");\n    }\n  }\n\n  useEffect(() => {\n    if (isValidate) {\n      create();\n    }\n  }, [error, isValidate]);\n\n  return (\n    <>\n      {\n        !isLogin\n          ? <Redirect to=\"/\" />\n          : (\n            <CRow className=\"justify-content-md-center\">\n              <CCol xs=\"12\" sm=\"6\">\n                <CCard>\n                  <CCardHeader>\n                    <h2>Book Information</h2>\n                  </CCardHeader>\n                  <CForm onSubmit={handleSubmit}>\n                    <CCardBody>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"name\">Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.name} id=\"name\" name=\"name\" value={book.name} onChange={handleBookChange} />\n                          <CInvalidFeedback>Name cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"description\">Description</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.description} id=\"description\" name=\"description\" value={book.description} onChange={handleBookChange} />\n                          <CInvalidFeedback>Description cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"price\">Price</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.price} id=\"price\" name=\"price\" value={book.price} onChange={handleBookChange} />\n                          <CInvalidFeedback>Price cannot be empty and should be greater than 0</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"year\">Year</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.year} id=\"year\" name=\"year\" value={book.year} onChange={handleBookChange} />\n                          <CInvalidFeedback>Year cannot be empty and should be greater than 0</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"publisher\">Publisher</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.publisher} id=\"publisher\" name=\"publisher\" value={book.publisher} onChange={handleBookChange} />\n                          <CInvalidFeedback>Publisher cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"cover\">Cover</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput id=\"cover\" name=\"cover\" value={book.cover} onChange={handleBookChange} />\n                        </CCol>\n                      </CFormGroup>\n                    </CCardBody>\n                    <CCardBody>\n                      <h5>Author</h5>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"id\">ID</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.authorId} id=\"ID\" name=\"id\" value={book.author.id} onChange={handleAuthorChange} />\n                          <CInvalidFeedback>ID of author cannot be empty and should be greater than 0</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                         <CLabel htmlFor=\"name\">Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.authorName} id=\"name\" name=\"name\" value={book.author.name} onChange={handleAuthorChange} />\n                          <CInvalidFeedback>Name of author cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"website\">Website</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput id=\"website\" name=\"website\" value={book.author.website} onChange={handleAuthorChange} />\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"birthday\">Birthday</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.authorBirthday} id=\"birthday\" name=\"birthday\" value={book.author.birthday} onChange={handleAuthorChange} />\n                          <CInvalidFeedback>Birthday of author cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"cover\">Cover</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.authorCover} id=\"cover\" name=\"cover\" value={book.author.cover} onChange={handleAuthorChange} />\n                          <CInvalidFeedback>Cover image of author cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                    </CCardBody>\n                    <CCardBody>\n                      <h5>Categories</h5>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"id\">ID</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={false} id=\"ID\" name=\"id\" value={book.categories[0].id} onChange={handleCategoryChange} />\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"name\">Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={false} id=\"name\" name=\"name\" value={book.categories[0].name} onChange={handleCategoryChange} />\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"description\">Description</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={false} id=\"description\" name=\"description\" value={book.categories[0].description} onChange={handleCategoryChange} />\n                        </CCol>\n                      </CFormGroup>\n                    </CCardBody>\n                    <CCardFooter>\n                      <CButton \n                        type=\"submit\"\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"info\"\n                      >\n                        Create\n                      </CButton> \n                      <CButton\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"danger\"\n                        onClick={() => props.history.goBack()}\n                      >\n                        Cancel\n                      </CButton>\n                    </CCardFooter>\n                  </CForm>\n                </CCard>\n              </CCol>\n            </CRow>\n          )\n      }\n    </>\n  )\n};\n\nexport default NewBook;","import React, { useState, FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\nconst Author: FC = (props) => {\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin);\n\n  return (\n    <>\n      <h1>Author</h1>\n      {\n        isLogin\n          ? (\n            <ul>\n              <li>\n                <Link to=\"/authors/all\">Get All Authors</Link>\n              </li>\n              <li>\n                <Link to=\"/authors/new\">Add a new Authors</Link>\n              </li>\n            </ul>)\n          : <Redirect to=\"/\" />\n      }\n    </>\n  );\n};\n\nexport default Author;","import React, { useState, FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\n\nconst CategoryMenu: FC = (props) => {\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin);\n\n  return (\n    <>\n      <h1>Category</h1>\n      {\n        isLogin\n          ? (\n            <ul>\n              <li>\n                <Link to=\"/categories/all\">Get All Categorys</Link>\n              </li>\n              <li>\n                <Link to=\"/categories/new\">Add a new Category</Link>\n              </li>\n            </ul>)\n          : <Redirect to=\"/\" />\n      }\n    </>\n  );\n};\n\nexport default CategoryMenu;","import React, { useState, FC, useEffect } from 'react';\nimport { updateBook } from '../../redux/actions/bookAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInvalidFeedback,\n  CInput,\n  CLabel,\n  CRow,\n} from '@coreui/react';\nimport { Book } from '../../types/Model';\nimport { BookErrorProps } from '../../types/Error';\n\nconst UpdateBook: FC<{history: any, match: any}> = (props) => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin)\n  const data = useSelector((state: any) => state.bookReducer.book);\n\n  const [isValidate, setIsValidate] = useState(false);\n  const [book, setBook] = useState<Book> ({ ...data } );\n  const [error, setError] = useState<BookErrorProps<boolean>> ({\n    name: false,\n    description: false,\n    price: false,\n    year: false,\n    authorId: false,\n    authorName: false,\n    authorBirthday: false,\n    authorCover: false,\n    publisher: false\n  });\n\n  const handleBookChange = (e: React.ChangeEvent<any>) => {\n    const {name, value} = e.target;\n    let newvalue = (name === \"price\") \n            ? 10.2\n            : ( name === \"year\" )\n              ? 1842\n              : value;\n    newvalue = ( value === \"\" ) ? null : value;\n    console.log(name, value === \"\");\n    \n    setBook({\n      ...book,\n      [name]: newvalue\n    });\n  }\n\n  const handleAuthorChange = (e: React.ChangeEvent<any>) => {\n    const {name, value} = e.target;\n    let newvalue = (name === \"id\") ? 10 : value;\n    console.log(name, value);\n    setBook({\n      ...book,\n      author: {\n        ...book.author,\n        [name]: newvalue\n      }\n    });\n  }\n\n  const handleCategoryChange = (e: React.ChangeEvent<any>) => {\n    const {name, value} = e.target;\n    let newvalue = (name === \"id\") ? 10 : value;\n    console.log(\"name: \", name);\n    \n    let newCate: any = book.categories;\n    newCate = newCate.length\n          ? (\n            newCate.map((cate: any) => {\n              if (!Object.keys(cate).includes(name)) {\n                return { ...cate, [name]: newvalue }\n              }\n              return cate;\n            })\n          )\n          : [ ...newCate, {[name]: newvalue} ]\n\n    setBook({\n      ...book,\n      categories: newCate\n    });\n  }\n\n  const handleSubmit = async (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n    await validate(book);\n  }\n\n  const validate = async (book: Book) => {\n    setError({\n      name: book.name === null,\n      description: book.description === \"\",\n      price: book.price <= 0.0 && book.price === null,\n      year: book.year <= 0.0 && book.year === null,\n      authorId: book.author.id === 0 && book.author.id === null,\n      authorName: book.author.name === \"\",\n      authorBirthday: book.author.birthday === \"\",\n      authorCover: book.author.cover === \"\",\n      publisher: book.publisher === \"\"\n    });\n    \n    setIsValidate(book !== null \n      && (Object.values(error)\n              .filter(val => !val)\n              .length !== 0)\n    )\n  }\n\n  const update = async () => {\n    const result = await dispatch(updateBook(JSON.stringify(book), +props.match.params.id));\n    if (+result === 200) {\n      props.history.push(\"/books/all\");\n    }\n  }\n\n  useEffect(() => {\n    if (isValidate) {\n      update();\n    }\n  }, [error, isValidate]);\n  \n  return (\n    <>\n      {\n        !isLogin\n          ? <Redirect to=\"/\" />\n          : (\n            <CRow className=\"justify-content-md-center\">\n              <CCol xs=\"12\" sm=\"6\">\n                <CCard>\n                  <CCardHeader>\n                    <h2>Book Information</h2>\n                  </CCardHeader>\n                  <CForm onSubmit={handleSubmit}>\n                    <CCardBody>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"name\">Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.name} id=\"name\" name=\"name\" value={book.name} onChange={handleBookChange} />\n                          <CInvalidFeedback>Name cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"description\">Description</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.description} id=\"description\" name=\"description\" value={book.description} onChange={handleBookChange} />\n                          <CInvalidFeedback>Description cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"price\">Price</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.price} id=\"price\" name=\"price\" value={book.price} onChange={handleBookChange} />\n                          <CInvalidFeedback>Price cannot be empty and should be greater than 0</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"year\">Year</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.year} id=\"year\" name=\"year\" value={book.year} onChange={handleBookChange} />\n                          <CInvalidFeedback>Year cannot be empty and should be greater than 0</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"publisher\">Publisher</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.publisher} id=\"publisher\" name=\"publisher\" value={book.publisher} onChange={handleBookChange} />\n                          <CInvalidFeedback>Publisher cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"cover\">Cover</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput id=\"cover\" name=\"cover\" value={book.cover} onChange={handleBookChange} />\n                        </CCol>\n                      </CFormGroup>\n                    </CCardBody>\n                    <CCardBody>\n                      <h5>Author</h5>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"id\">ID</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.authorId} id=\"ID\" name=\"id\" value={book.author.id} onChange={handleAuthorChange} />\n                          <CInvalidFeedback>ID of author cannot be empty and should be greater than 0</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                         <CLabel htmlFor=\"name\">Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.authorName} id=\"name\" name=\"name\" value={book.author.name} onChange={handleAuthorChange} />\n                          <CInvalidFeedback>Name of author cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"website\">Website</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput id=\"website\" name=\"website\" value={book.author.website} onChange={handleAuthorChange} />\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"birthday\">Birthday</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.authorBirthday} id=\"birthday\" name=\"birthday\" value={book.author.birthday} onChange={handleAuthorChange} />\n                          <CInvalidFeedback>Birthday of author cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"cover\">Cover</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.authorCover} id=\"cover\" name=\"cover\" value={book.author.cover} onChange={handleAuthorChange} />\n                          <CInvalidFeedback>Cover image of author cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                    </CCardBody>\n                    <CCardBody>\n                      <h5>Categories</h5>\n                      {\n                        book.categories.length\n                          ? book.categories.map( category => {\n                            return (\n                              <>\n                                <CFormGroup row>\n                                  <CCol md=\"3\">\n                                    <CLabel htmlFor=\"id\">ID</CLabel>\n                                  </CCol>\n                                  <CCol xs=\"12\" md=\"9\">\n                                    <CInput invalid={false} id=\"ID\" name=\"id\" value={category.id} onChange={handleCategoryChange} />\n                                  </CCol>\n                                </CFormGroup>\n                                <CFormGroup row>\n                                  <CCol md=\"3\">\n                                    <CLabel htmlFor=\"name\">Name</CLabel>\n                                  </CCol>\n                                  <CCol xs=\"12\" md=\"9\">\n                                    <CInput invalid={false} id=\"name\" name=\"name\" value={category.name} onChange={handleCategoryChange} />\n                                  </CCol>\n                                </CFormGroup>\n                                <CFormGroup row>\n                                  <CCol md=\"3\">\n                                    <CLabel htmlFor=\"description\">Description</CLabel>\n                                  </CCol>\n                                  <CCol xs=\"12\" md=\"9\">\n                                    <CInput invalid={false} id=\"description\" name=\"description\" value={category.description} onChange={handleCategoryChange} />\n                                  </CCol>\n                                </CFormGroup>\n                              </>\n                            );\n                          })\n                          : null\n                      }\n                    </CCardBody>\n                    <CCardFooter>\n                      <CButton \n                        type=\"submit\"\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"info\"\n                      >\n                        Save changes\n                      </CButton> \n                      <CButton\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"danger\"\n                        onClick={() => props.history.goBack()}\n                      >\n                        Cancel\n                      </CButton>\n                    </CCardFooter>\n                  </CForm>\n                </CCard>\n              </CCol>\n            </CRow>\n          )\n      }\n    </>\n  )\n};\n\nexport default UpdateBook;","import LoginPage from './pages/login/LoginPage';\nimport HomePage from './pages/home/Home';\nimport User from './pages/users/UserMenu';\nimport Book from './pages/books/BookMenu';\nimport BookList from './pages/books/BookList';\nimport NewBook from './pages/books/NewBook';\nimport Author from './pages/authors/AuthorMenu';\nimport Category from './pages/categories/CategoryMenu';\nimport UpdateBook from './pages/books/UpdateBook';\nimport BookInfo from './pages/books/bookInfo/BookInfo';\nimport CategoryList from './pages/categories/CategoryList';\nimport CategoryInfo from './pages/categories/CategoryInfo';\nimport NewCategory from './pages/categories/NewCategory';\nimport UpdateCategory from './pages/categories/UpdateCategory';\nimport UserList from './pages/users/UserList';\nimport NewUser from './pages/users/NewUser';\nimport UpdateUser from './pages/users/UpdateUser';\nimport AuthorList from './pages/authors/AuthorList';\nimport NewAuthor from './pages/authors/NewAuthor';\nimport AuthorInfo from './pages/authors/AuthorInfo';\nimport UpdateAuthor from './pages/authors/UpdateAuthor';\n\nconst routes = [\n  {\n    path: '/',\n    component: LoginPage,\n    exact: true,\n  },\n  {\n    path: '/home',\n    component: HomePage,\n    exact: false,\n  },\n  {\n    path: '/users',\n    component: User,\n    exact: true,\n  },\n  {\n    path: '/users/all',\n    component: UserList,\n    exact: true,\n  },\n  {\n    path: '/users/new',\n    component: NewUser,\n    exact: true,\n  },\n  {\n    path: '/users/edit/:id',\n    component: UpdateUser,\n    exact: false,\n  },\n  {\n    path: '/books',\n    component: Book,\n    exact: true,\n  },\n  {\n    path: '/books/all',\n    component: BookList,\n    exact: true,\n  },\n  {\n    path: '/books/new',\n    component: NewBook,\n    exact: true,\n  },\n  {\n    path: '/books/:id',\n    component: BookInfo,\n    exact: true,\n  },\n  {\n    path: '/books/edit/:id',\n    component: UpdateBook,\n    exact: false,\n  },\n  {\n    path: '/authors',\n    component: Author,\n    exact: true,\n  },\n  {\n    path: '/authors/all',\n    component: AuthorList,\n    exact: true,\n  },\n  {\n    path: '/authors/new',\n    component: NewAuthor,\n    exact: true,\n  },\n  {\n    path: '/authors/:id',\n    component: AuthorInfo,\n    exact: true,\n  },\n  {\n    path: '/authors/edit/:id',\n    component: UpdateAuthor,\n    exact: true,\n  },\n  {\n    path: '/categories',\n    component: Category,\n    exact: true,\n  },\n  {\n    path: '/categories/all',\n    component: CategoryList,\n    exact: true,\n  },\n  {\n    path: '/categories/new',\n    component: NewCategory,\n    exact: true,\n  },\n  {\n    path: '/categories/:id',\n    component: CategoryInfo,\n    exact: true,\n  },\n  {\n    path: '/categories/edit/:id',\n    component: UpdateCategory,\n    exact: false,\n  },\n];\n\nexport default routes;","import React, { FC, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { getAllUser, deleteUser } from '../../redux/actions/userAction';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport PaginationComponent from '../../components/pagination/PaginationComponent';\nimport {\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n} from '@coreui/react'\nimport { User } from '../../types/Model';\n\nconst UserList: FC<{history: any, match: any}> = (props) => {\n  const dispatch = useDispatch();\n\n  const list = useSelector((state: any) => state.userReducer.list);\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin);\n\n  const pagination = useSelector((state: any) => state.userReducer.pagination);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const [loading, setLoading] = useState(true);\n\n  if ( pagination && currentPage !== pagination.currentPage ) {\n    setCurrentPage(pagination.currentPage);\n    setTotalPages(pagination.totalPages);\n  }\n\n  // const handleDeleteUser = async (id: number) => {\n  //   const status = await dispatch(deleteUser(id));\n  //   (+status === 200) ? console.log(\"Delete success\") : console.log(\"Delete fail\");\n  // }\n\n  const getUsersListContent = async () => {\n    const status = await dispatch(getAllUser(currentPage.toString()));\n    if (+status === 200) {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getUsersListContent();\n  }, [loading, dispatch]);\n\n  useEffect(() => {\n    if ( pagination  ) {\n      setCurrentPage(pagination.currentPage);\n      setTotalPages(pagination.totalPages);\n    }\n  }, [pagination]);\n  console.log(\"pagination: \", pagination);\n  \n\n  return (\n    <>\n      {\n        (isLogin)\n        ? (\n          <CRow>\n            <CCol xl={12}>\n              <CCard>\n                <CCardHeader>\n                  <h1>Users List</h1>\n                </CCardHeader>\n                <CCardBody>\n                <CDataTable\n                  items={list}\n                  fields={[\n                    { key: 'name', _classes: 'font-weight-bold' },\n                    'username', 'role'\n                  ]}\n                  hover\n                  loading={loading}\n                  striped\n                  itemsPerPage={5}\n                  clickableRows\n                  onRowClick={(item: User) => props.history.push(`/users/edit/${item.id}`)}\n                />\n                </CCardBody>\n                <CCardFooter>\n                  <PaginationComponent type=\"user\" totalPages={totalPages} currentPage={currentPage} />\n                </CCardFooter>\n              </CCard>\n            </CCol>\n          </CRow>\n        )\n        : <Redirect to=\"/\" />\n      }\n    </>\n  );\n};\n\nexport default UserList;","import React, { useState, FC, useEffect } from 'react';\nimport { createUser } from '../../redux/actions/userAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInvalidFeedback,\n  CInput,\n  CLabel,\n  CRow,\n} from '@coreui/react';\nimport { UserErrorProps } from '../../types/Error';\nimport { User } from '../../types/Model';\n\nconst NewUser: FC<{history: any}> = (props) => {\n\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin)\n\n  const [isValidate, setIsValidate] = useState(false);\n  const [user, setUser] = useState<User> (\n    {\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      role: \"\"\n    }\n  );\n\n  const [error, setError] = useState<UserErrorProps<boolean>> ({\n    name: false,\n    username: false,\n    password: false,\n    role: false\n  });\n\n  const handleUserChange = (e: React.ChangeEvent<any>) => {\n    const {name, value} = e.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  }\n\n  const handleSubmit = async (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n    await validate(user);\n  }\n\n  const validate = async (user: User) => {\n    setError({\n      name: user.name === \"\",\n      password: user.password === \"\",\n      username: user.username === \"\",\n      role: user.role === \"\"\n    });\n    setIsValidate(user !== null \n      && (Object.values(error)\n              .filter(val => !val)\n              .length !== 0)\n    )\n  }\n\n  const create = async () => {\n    const status = await dispatch(createUser(user));\n    switch (+status) {\n      case 200:\n        props.history.push(\"/users/all\");\n        break;\n      default:\n        console.log(\"Username existed\");\n        break;\n    }\n  }\n\n  useEffect(() => {\n    if (isValidate) {\n      create();\n    }\n  }, [error, isValidate])\n\n  return (\n    <>\n      {\n        !isLogin\n          ? <Redirect to=\"/\" />\n          : (\n            <CRow className=\"justify-content-md-center\">\n              <CCol xs=\"12\" sm=\"6\">\n                <CCard>\n                  <CCardHeader>\n                    <h2>User Information</h2>\n                  </CCardHeader>\n                  <CForm onSubmit={handleSubmit}>\n                    <CCardBody>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"name\">Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.name} id=\"name\" name=\"name\" value={user.name} onChange={handleUserChange} />\n                          <CInvalidFeedback>Name cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"username\">Username</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.username} id=\"username\" name=\"username\" value={user.username} onChange={handleUserChange} />\n                          <CInvalidFeedback>Username cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"password\">Password</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.password} id=\"password\" name=\"password\" value={user.password} onChange={handleUserChange} />\n                          <CInvalidFeedback>Password cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"role\">Role</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.role} id=\"role\" name=\"role\" value={user.role} onChange={handleUserChange} />\n                          <CInvalidFeedback>Role cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                    </CCardBody>\n                    <CCardFooter>\n                      <CButton \n                        type=\"submit\"\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"info\"\n                      >\n                        Create\n                      </CButton> \n                      <CButton\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"danger\"\n                        onClick={() => props.history.goBack()}\n                      >\n                        Cancel\n                      </CButton>\n                    </CCardFooter>\n                  </CForm>\n                </CCard>\n              </CCol>\n            </CRow>\n          )\n      }\n    </>\n  )\n};\n\nexport default NewUser;","import React, { useState, FC, useEffect } from 'react';\nimport { updateUser, getUser } from '../../redux/actions/userAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInvalidFeedback,\n  CInput,\n  CLabel,\n  CRow,\n} from '@coreui/react';\nimport store from '../../redux/store';\nimport { UserErrorProps } from '../../types/Error';\nimport { User } from '../../types/Model';\n\nconst UpdateUser: FC<{history: any, match: any}> = (props) => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin)\n  const list = useSelector((state: any) => state.userReducer.list);\n  const data = useSelector((state: any) => state.userReducer.user);\n\n  const [loading, setLoading] = useState(true);\n\n  const [isValidate, setIsValidate] = useState(false);\n  const [user, setUser] = useState<User> ({...data});\n  const [error, setError] = useState<UserErrorProps<boolean>> ({\n    name: false,\n    username: false,\n    role: false\n  });\n\n  const handleUserChange = (e: React.ChangeEvent<any>) => {\n    const {name, value} = e.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  }\n\n  const handleSubmit = async (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n    await validate(user);\n  }\n\n  const validate = async (user: User) => {\n    setError({\n      name: user.name == \"\",\n      username: user.username == \"\",\n      role: user.role === \"\"\n    });\n    setIsValidate(user !== null \n      && (Object.values(error)\n              .filter(val => !val)\n              .length !== 0)\n    )\n  }\n\n  const update = async () => {\n    const status = await dispatch(updateUser(user, +props.match.params.id));\n    if (+status === 200) {\n      props.history.push(\"/users/all\");\n    } else {\n      console.log(\"Something went wrong!!\")\n    }\n  }\n\n  useEffect(() => {\n    if (isValidate) {\n      update(); \n    }\n  }, [error, isValidate]);\n\n  useEffect(() => {\n    const newUser = dispatch(getUser(list, +props.match.params.id));\n    setUser(newUser);\n  }, [dispatch])\n\n  useEffect(() => {\n    if (user) {\n      setLoading(false);\n    }\n  }, [loading, user]);\n  \n  console.log(\"store: \", store.getState());\n  \n  return (\n    <>\n      {\n        (isLogin && user)\n          ? (\n            <CRow className=\"justify-content-md-center\">\n              <CCol xs=\"12\" sm=\"6\">\n                <CCard>\n                  <CCardHeader>\n                    <h2>User Information</h2>\n                  </CCardHeader>\n                  <CForm onSubmit={handleSubmit}>\n                    <CCardBody>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"name\">Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.name} id=\"name\" name=\"name\" value={user.name} onChange={handleUserChange} />\n                          <CInvalidFeedback>Name cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"username\">Username</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.username} id=\"username\" name=\"username\" value={user.username} onChange={handleUserChange} />\n                          <CInvalidFeedback>Username cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"role\">Role</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.role} id=\"role\" name=\"role\" value={user.role} onChange={handleUserChange} />\n                          <CInvalidFeedback>Role cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                    </CCardBody>\n                    <CCardFooter>\n                      <CButton \n                        type=\"submit\"\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"info\"\n                      >\n                        Save changes\n                      </CButton> \n                      <CButton\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"danger\"\n                        onClick={() => props.history.goBack()}\n                      >\n                        Cancel\n                      </CButton>\n                    </CCardFooter>\n                  </CForm>\n                </CCard>\n              </CCol>\n            </CRow>\n          )\n        : isLogin\n          ? <CircularProgress />\n          : <Redirect to=\"/\" />\n      }\n    </>\n  )\n};\n\nexport default UpdateUser;","import React, { useState, FC, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getBook, deleteBook } from '../../../redux/actions/bookAction';\nimport { Redirect, Link } from 'react-router-dom';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n} from '@coreui/react';\nimport './BookInfo.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Category } from '../../../types/Model';\n\nconst BookInfo: FC<{history: any, match: any}> = (props) => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin);\n  const book = useSelector((state: any) => state.bookReducer.book);\n\n  const [loading, setLoading] = useState(true);\n\n  const handleDeleteBook = async () => {\n    const status = await dispatch(deleteBook(+props.match.params.id));\n    if (+status === 200) {\n      props.history.push('/books/all'); \n    } \n  }\n\n  const getBookInfo = async () => {\n    const status = await dispatch(getBook(+props.match.params.id));\n    if (+status === 200) {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getBookInfo();\n  }, [loading, dispatch]);\n\n  return (\n    <>\n      {\n        (isLogin && book)\n        ? (\n          <CRow className=\"justify-content-md-center\">\n            <CCol lg={8}>\n              <CCard>\n                <CCardHeader className=\"header\">\n                  <strong>User Information</strong>\n                  <div className=\"form-actions\">\n                    <CButton type=\"submit\" size=\"md\" shape=\"pill\" color=\"info\" onClick={() => props.history.push(`/books/edit/${book.id}`)}>Update</CButton>\n                    <CButton size=\"md\" shape=\"pill\" color=\"danger\" onClick={handleDeleteBook}>Remove</CButton>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                    <table className=\"table table-striped table-hover\">\n                      <tbody>\n                        {\n                          Object.keys(book).map((key, index) => {\n                            let value = null;\n                            switch (key) {\n                              case \"author\":\n                                value = book.author.name;\n                                break;\n                              case \"categories\":\n                                value = book.categories.length  \n                                          ? book.categories.reduce((accum: string[], val: Category) => {\n                                            accum.push(val.name);\n                                            return accum;\n                                          }, []).join(\",\")\n                                          : null;        \n                                break;\n                              default:\n                                value = book[key];\n                                break;\n                            }\n                            return (\n                              <tr key={index.toString()}>\n                                <td>{`${key}:`}</td>\n                                <td><strong>{value}</strong></td>\n                              </tr>\n                            )\n                          })\n                        }\n                      </tbody>\n                    </table>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        )\n        : isLogin\n          ? <CircularProgress />\n          : <Redirect to=\"/\" />\n      }\n    </>\n  );\n};\n\nexport default BookInfo;","import React, { FC, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { getAllAuthors } from '../../redux/actions/authorAction';\nimport PaginationComponent from '../../components/pagination/PaginationComponent';\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CCardFooter\n} from '@coreui/react';\nimport { Author } from '../../types/Model';\n\nconst AuthorList: FC<{history: any}> = (props) => {\n  const dispatch = useDispatch();\n\n  const list = useSelector((state: any) => state.authorReducer.list);\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin);\n\n  const pagination = useSelector((state: any) => state.authorReducer.pagination);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const [loading, setLoading] = useState(true);\n\n  if ( pagination && currentPage !== pagination.currentPage ) {\n    setCurrentPage(pagination.currentPage);\n    setTotalPages(pagination.totalPages);\n  }\n\n  const getAuthorListContent = async () => {\n    const status = await dispatch(getAllAuthors(currentPage.toString()));\n    if (+status === 200 || list.length !== 0) {\n      setLoading(false);\n    }\n  }\n  const fields = [\n    { key: 'name', _classes: 'font-weight-bold' },\n    'website',\n    'birthday',\n    'books'\n  ];\n\n  useEffect(() => {\n    getAuthorListContent();\n  }, [loading, dispatch]);\n\n  useEffect(() => {\n    if ( pagination  ) {\n      setCurrentPage(pagination.currentPage);\n      setTotalPages(pagination.totalPages);\n    }\n  }, [pagination]);\n\n  return (\n    <>\n      {\n        (isLogin)\n        ? (\n          <CRow>\n            <CCol xl={12}>\n              <CCard>\n                <CCardHeader>\n                  <h1>Authors List</h1>\n                </CCardHeader>\n                <CCardBody>\n                  <CDataTable\n                    items={list}\n                    fields={fields}\n                    hover\n                    loading={loading}\n                    striped\n                    itemsPerPage={10}\n                    clickableRows\n                    onRowClick={(item: Author) => props.history.push(`/authors/${item.id}`)}\n                  />\n                </CCardBody>\n                <CCardFooter>\n                  <PaginationComponent type=\"author\" totalPages={totalPages} currentPage={currentPage} />\n                </CCardFooter>\n              </CCard>\n            </CCol>\n          </CRow>\n        )\n        : <Redirect to=\"/\" />\n      }\n    </>\n  );\n};\n\nexport default AuthorList;","import React, { useState, FC, useEffect } from 'react';\nimport { createAuthor } from '../../redux/actions/authorAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInvalidFeedback,\n  CInput,\n  CLabel,\n  CRow,\n} from '@coreui/react';\nimport { Author } from '../../types/Model';\nimport { AuthorErrorProps } from '../../types/Error';\n\nconst NewAuthor: FC<{history: any}> = (props) => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin)\n\n  const [isValidate, setIsValidate] = useState(false);\n  const [author, setAuthor] = useState<Author> (\n    {\n      name: \"\",\n      website: \"\",\n      birthday: \"\",\n      cover: \"\"\n    }\n  );\n\n  const [error, setError] = useState<AuthorErrorProps<boolean>> ({\n    name: false,\n    birthday: false\n  })\n\n  const handleAuthorChange = (e: React.ChangeEvent<any>) => {\n    const {name, value} = e.target;\n    setAuthor({\n      ...author,\n      [name]: value\n    });\n  }\n\n  const handleSubmit = async (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n    await validate(author);\n  }\n\n  const validate = async (author: Author) => {\n    setError({\n      name: author.name === \"\",\n      birthday: author.birthday === \"\"\n    });\n    setIsValidate(author !== null \n      && (Object.values(error)\n              .filter(val => !val)\n              .length !== 0)\n    );\n  }\n\n  const create = async ()=>{\n    const newAuthor = {\n      ...author,\n      cover: null\n    }\n\n    const status = await dispatch(createAuthor(JSON.stringify(newAuthor)));\n    if (+status === 200) {\n      props.history.push(\"/authors/all\");\n    }\n  }\n\n  useEffect(() => {\n    if (isValidate) {\n      create();\n    }\n  },[error, isValidate]);\n\n  return (\n    <>\n      {\n        !isLogin\n          ? <Redirect to=\"/\" />\n          : (\n            <CRow className=\"justify-content-md-center\">\n              <CCol xs=\"12\" sm=\"6\">\n                <CCard>\n                  <CCardHeader>\n                    <h2>Author Information</h2>\n                  </CCardHeader>\n                  <CForm onSubmit={handleSubmit}>\n                    <CCardBody>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"name\">Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.name} id=\"name\" name=\"name\" value={author.name} onChange={handleAuthorChange} />\n                          <CInvalidFeedback>Name cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"website\">Website</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput id=\"website\" name=\"website\" value={author.website} onChange={handleAuthorChange} />\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"birthday\">Birthday</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.birthday} id=\"birthday\" name=\"birthday\" value={author.birthday} onChange={handleAuthorChange} />\n                          <CInvalidFeedback>Birthday cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"cover\">Cover</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput disabled id=\"birthday\" name=\"birthday\" value={author.cover} onChange={handleAuthorChange} />\n                        </CCol>\n                      </CFormGroup>\n                    </CCardBody>\n                    <CCardFooter>\n                      <CButton \n                        type=\"submit\"\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"info\"\n                      >\n                        Create\n                      </CButton> \n                      <CButton\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"danger\"\n                        onClick={() => props.history.goBack()}\n                      >\n                        Cancel\n                      </CButton>\n                    </CCardFooter>\n                  </CForm>\n                </CCard>\n              </CCol>\n            </CRow>\n          )\n      }\n    </>\n  )\n};\n\nexport default NewAuthor;","import React, { useState, FC, useEffect, Props } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAuthor, deleteAuthor } from '../../redux/actions/authorAction';\nimport { Redirect, Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n} from '@coreui/react';\nimport { Book } from '../../types/Model';\n\nconst AuthorInfo: FC<{history: any, match: any}> = (props) => {\n\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin);\n  const author = useSelector((state: any) => state.authorReducer.author)\n\n  const [loading, setLoading] = useState(true);\n\n  const handleDeleteAuthor = async () => {\n    const status = await dispatch(deleteAuthor(+props.match.params.id));    \n    if (+status === 200) {\n      props.history.push('/authors/all');\n    }\n  }              \n\n  const getAuthorInfo = async () => {\n    const status = await dispatch(getAuthor(+props.match.params.id));\n    if (+status === 200) {\n      setLoading(false);\n    }\n  }\n  \n  useEffect(() => {\n    getAuthorInfo();\n  }, [loading, dispatch]);\n\n  return (\n    <>\n      <h1>AuthorInfo</h1>\n      {\n        (isLogin && author)\n        ? (\n          <CRow className=\"justify-content-md-center\">\n            <CCol lg={8}>\n              <CCard>\n                <CCardHeader className=\"header\">\n                  <h1>User Information</h1>\n                  <div className=\"form-actions\">\n                    <CButton type=\"submit\" size=\"md\" shape=\"pill\" color=\"info\" onClick={() => props.history.push(`/authors/edit/${author.id}`)}>Update</CButton>\n                    <CButton size=\"md\" shape=\"pill\" color=\"danger\" onClick={handleDeleteAuthor}>Remove</CButton>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                    <table className=\"table table-striped table-hover\">\n                      <tbody>\n                        {\n                          Object.keys(author).map((key, index) => {\n                            const value = (key === \"books\" && author.books.length !== 0) \n                                          ? author.books.reduce((accum: string[], val: Book) => {\n                                              accum.push(val.name);\n                                              return accum;\n                                            }, []).join(\",\")\n                                          : author[key];    \n                            return (\n                              <tr key={index.toString()}>\n                                <td>{`${key}:`}</td>\n                                <td><strong>{value}</strong></td>\n                              </tr>\n                            )\n                          })\n                        }\n                      </tbody>\n                    </table>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        )\n        : isLogin\n          ? <CircularProgress />\n          : <Redirect to=\"/\" />\n      }\n    </>\n  );\n};\n\nexport default AuthorInfo;","import React, { useState, FC, useEffect } from 'react';\nimport { updateAuthor } from '../../redux/actions/authorAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInvalidFeedback,\n  CInput,\n  CLabel,\n  CRow,\n} from '@coreui/react';\nimport { Author } from '../../types/Model';\nimport { AuthorErrorProps } from '../../types/Error';\n\nconst UpdateAuthor: FC<{history: any, match: any}> = (props) => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin)\n  const data = useSelector((state: any) => state.authorReducer.author);\n\n  const [isValidate, setIsValidate] = useState(false);\n  const [author, setAuthor] = useState<Author> ({...data});\n\n  const [error, setError] = useState<AuthorErrorProps<boolean>> ({\n    name: false,\n    birthday: false\n  });\n\n  const { name, website, birthday, cover } = data ? data : \"\";\n\n  const handleAuthorChange = (e: React.ChangeEvent<any>) => {\n    const {name, value} = e.target;\n    setAuthor({\n      ...author,\n      [name]: value\n    });\n  }\n\n  const handleSubmit = async (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n    await validate(author);\n  }\n\n  const validate = async (author: Author) => {\n    setError({\n      name: author.name === \"\",\n      birthday: author.birthday === \"\"\n    });\n    setIsValidate(author !== null \n      && (Object.values(error)\n              .filter(val => !val)\n              .length !== 0)\n    );\n  }\n\n  const update = async () => {\n    const newAuthor = {\n      ...author,\n      cover: null\n    }\n\n    const status = await dispatch(updateAuthor(JSON.stringify(newAuthor), +props.match.params.id));\n    if (+status === 200) {\n      props.history.push(\"/authors/all\");        \n    }\n    console.log(\"status: \", status);\n    \n  }\n\n  useEffect(() => {\n    if (isValidate) {\n      update();\n    }\n  }, [error, isValidate])\n\n  return (\n    <>\n      {\n        !isLogin\n          ? <Redirect to=\"/\" />\n          : (\n            <CRow className=\"justify-content-md-center\">\n              <CCol xs=\"12\" sm=\"6\">\n                <CCard>\n                  <CCardHeader>\n                    <h2>Author Information</h2>\n                  </CCardHeader>\n                  <CForm onSubmit={handleSubmit}>\n                    <CCardBody>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"name\">Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.name} id=\"name\" name=\"name\" value={author.name} onChange={handleAuthorChange} />\n                          <CInvalidFeedback>Name cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"birthday\">Birthday</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.birthday} id=\"birthday\" name=\"birthday\" value={author.birthday} onChange={handleAuthorChange} />\n                          <CInvalidFeedback>Birthday cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                    </CCardBody>\n                    <CCardFooter>\n                      <CButton \n                        type=\"submit\"\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"info\"\n                      >\n                        Save changes\n                      </CButton> \n                      <CButton\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"danger\"\n                        onClick={() => props.history.goBack()}\n                      >\n                        Cancel\n                      </CButton>\n                    </CCardFooter>\n                  </CForm>\n                </CCard>\n              </CCol>\n            </CRow>\n          )\n      }\n    </>\n  )\n};\n\nexport default UpdateAuthor;","import React, { FC, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { getAllCategories } from '../../redux/actions/categoryAction';\nimport PaginationComponent from '../../components/pagination/PaginationComponent';\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CCardFooter\n} from '@coreui/react'\nimport { Category } from '../../types/Model';\n\nconst CategoryList: FC<{history: any}> = (props) => {\n  const dispatch = useDispatch();\n\n  const list = useSelector((state: any) => state.categoryReducer.list);\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin);\n\n  const pagination = useSelector((state: any) => state.bookReducer.pagination);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const [loading, setLoading] = useState(true);\n\n  if ( pagination && currentPage !== pagination.currentPage ) {\n    setCurrentPage(pagination.currentPage);\n    setTotalPages(pagination.totalPages);\n  }\n  const fields = [\n    { key: 'name', _classes: 'font-weight-bold' },\n    'description',\n  ];\n\n  const getCategoriesListContent = async () => {\n    const status = await dispatch(getAllCategories(currentPage.toString()));\n    if (+status === 200 || list.length !== 0) {\n      setLoading(false);\n    }    \n  }\n\n  useEffect(() => {\n    getCategoriesListContent();\n  }, [loading, dispatch]);\n\n  useEffect(() => {\n    if ( pagination  ) {\n      setCurrentPage(pagination.currentPage);\n      setTotalPages(pagination.totalPages);\n    }\n  }, [pagination]);\n\n  return (\n    <>\n      {\n        (isLogin)\n        ? (\n          <CRow>\n            <CCol xl={12}>\n              <CCard>\n                <CCardHeader>\n                  Categories List\n                </CCardHeader>\n                <CCardBody>\n                  <CDataTable\n                    items={list}\n                    fields={fields}\n                    hover\n                    loading={loading}\n                    striped\n                    itemsPerPage={10}\n                    activePage={currentPage}\n                    clickableRows\n                    onRowClick={(item: Category) => props.history.push(`/categories/${item.id}`)}\n                    />\n                </CCardBody>\n                <CCardFooter>\n                  <PaginationComponent type=\"category\" totalPages={totalPages} currentPage={currentPage} />\n                </CCardFooter>\n              </CCard>\n            </CCol>\n          </CRow>)\n        : <Redirect to=\"/\" />\n      }\n    </>\n  );\n};\n\nexport default CategoryList;","import React, { useState, FC, useEffect } from 'react';\nimport { createCategory } from '../../redux/actions/categoryAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInvalidFeedback,\n  CInput,\n  CLabel,\n  CRow,\n} from '@coreui/react';\nimport { Category } from '../../types/Model';\nimport { CategoryErrorProps } from '../../types/Error';\n\nconst NewCategory: FC<{history: any}> = (props) => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin)\n\n  const [isValidate, setIsValidate] = useState(false);\n  const [category, setCategory] = useState<Category> (\n    {\n      name: \"\",\n      description: \"\",\n    }\n  );\n\n  const [error, setError] = useState<CategoryErrorProps<boolean>> ({\n    name: false,\n    description: false\n  })\n\n  const handleCategoryChange = (e: React.ChangeEvent<any>) => {\n    const {name, value} = e.target;\n    \n    setCategory({\n      ...category,\n      [name]: value\n    });\n    \n  }\n\n  const handleSubmit = async (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n    await validate(category);\n  }\n\n  const validate = async (category: Category) => {\n    setError({\n      name: category.name === \"\",\n      description: category.description === \"\"\n    });\n    setIsValidate(category !== null \n      && (Object.values(error)\n              .filter(val => !val)\n              .length !== 0)\n    );\n  }\n\n  const create = async () => {\n    const status = await dispatch(createCategory(JSON.stringify(category)));      \n    if (+status === 200) {\n      props.history.push(\"/categories/all\");\n    }\n  }\n\n  useEffect(() => {\n    if (isValidate) {\n      create();\n    }\n  }, [error, isValidate]);\n\n  return (\n    <>\n      {\n        !isLogin\n          ? <Redirect to=\"/\" />\n          : (\n            <CRow className=\"justify-content-md-center\">\n              <CCol xs=\"12\" sm=\"6\">\n                <CCard>\n                  <CCardHeader>\n                    <h2>category Information</h2>\n                  </CCardHeader>\n                  <CForm onSubmit={handleSubmit}>\n                    <CCardBody>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"name\">Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.name} id=\"name\" name=\"name\" value={category.name} onChange={handleCategoryChange} />\n                          <CInvalidFeedback>Name cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"description\">Description</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.description} id=\"description\" name=\"description\" value={category.description} onChange={handleCategoryChange} />\n                          <CInvalidFeedback>Description cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                    </CCardBody>\n                    <CCardFooter>\n                      <CButton \n                        type=\"submit\"\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"info\"\n                      >\n                        Create\n                      </CButton> \n                      <CButton\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"danger\"\n                        onClick={() => props.history.goBack()}\n                      >\n                        Cancel\n                      </CButton>\n                    </CCardFooter>\n                  </CForm>\n                </CCard>\n              </CCol>\n            </CRow>\n          )\n      }\n    </>\n  )\n};\n\nexport default NewCategory;","import React, { useState, FC, useEffect, Props } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCategory, deleteCategory } from '../../redux/actions/categoryAction';\nimport { Redirect, Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n} from '@coreui/react'\nimport { Book } from '../../types/Model';\n\nconst CategoryInfo: FC<{history: any, match: any}> = (props) => {\n\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin);\n  const category = useSelector((state: any) => state.categoryReducer.category)\n\n  const [loading, setLoading] = useState(true);\n\n  const handleDeleteCategory = async () => {\n    const status = await dispatch(deleteCategory(+props.match.params.id));\n    if (+status === 200) {\n      props.history.push('/categories/all');\n    }\n  }\n\n  const getCategoryInfo = async () => {\n    const status = await dispatch(getCategory(+props.match.params.id));\n      if (+status === 200) {\n        setLoading(false);\n      }\n  }\n\n  useEffect(() => {\n    getCategoryInfo();\n  }, [loading, dispatch]);\n\n  return (\n    <>\n      {\n        (isLogin && category)\n        ? (\n          <CRow className=\"justify-content-md-center\">\n            <CCol lg={8}>\n              <CCard>\n                <CCardHeader className=\"header\">\n                  <strong>Category Information</strong>\n                  <div className=\"form-actions\">\n                    <CButton type=\"submit\" size=\"md\" shape=\"pill\" color=\"info\" onClick={() => props.history.push(`/categories/edit/${category.id}`)}>Update</CButton>\n                    <CButton size=\"md\" shape=\"pill\" color=\"danger\" onClick={handleDeleteCategory}>Remove</CButton>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                    <table className=\"table table-striped table-hover\">\n                      <tbody>\n                        {\n                          Object.keys(category).map((key, index) => {\n                            const value = (key === \"books\" && category.books.length !== 0) \n                                          ? category.books.reduce((accum: string[], val: Book) => {\n                                              accum.push(val.name);\n                                              return accum;\n                                            }, []).join(\",\")\n                                          : category[key];    \n                            return (\n                              <tr key={index.toString()}>\n                                <td>{`${key}:`}</td>\n                                <td><strong>{value}</strong></td>\n                              </tr>\n                            )\n                          })\n                        }\n                      </tbody>\n                    </table>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        )\n        : isLogin\n          ? <CircularProgress />\n          : <Redirect to=\"/\" />\n      }\n    </>\n  );\n};\n\nexport default CategoryInfo;","import React, { useState, FC, useEffect } from 'react';\nimport { updateCategory } from '../../redux/actions/categoryAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CInvalidFeedback,\n  CInput,\n  CLabel,\n  CRow,\n} from '@coreui/react';\nimport { Category } from '../../types/Model';\nimport { CategoryErrorProps } from '../../types/Error';\n\nconst UpdateUser: FC<{history: any, match: any}> = (props) => {\n\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin)\n  const data = useSelector((state: any) => state.categoryReducer.category);\n\n  const [isValidate, setIsValidate] = useState(false);\n  const [category, setCategory] = useState<Category> ({...data});\n  const [error, setError] = useState<CategoryErrorProps<boolean>> ({\n    name: false,\n    description: false\n  });\n\n  const handleCategoryChange = (e: React.ChangeEvent<any>) => {\n    const {name, value} = e.target;\n    setCategory({\n      ...category,\n      [name]: value\n    });\n  }\n\n  const handleSubmit = async (e: React.ChangeEvent<any>) => {\n    e.preventDefault();\n    await validate(category);\n  }\n\n  const validate = async (category: Category) => {\n    setError({\n      name: category.name === null,\n      description: category.description === \"\"\n    });\n    setIsValidate(category !== null \n      && (Object.values(error)\n              .filter(val => !val)\n              .length !== 0)\n    );\n  }\n\n  const update = async () => {\n    const status = await dispatch(updateCategory(JSON.stringify(category), +props.match.params.id));\n    if (+status === 200) {\n      props.history.push(\"/categories/all\");\n    }\n  }\n\n  useEffect(() => {\n    if (isValidate) {\n      update();\n    }\n  }, [error, isValidate])\n\n  return (\n    <>\n      {\n        !isLogin\n          ? <Redirect to=\"/\" />\n          : (\n            <CRow className=\"justify-content-md-center\">\n              <CCol xs=\"12\" sm=\"6\">\n                <CCard>\n                  <CCardHeader>\n                    <h2>Category Information</h2>\n                  </CCardHeader>\n                  <CForm onSubmit={handleSubmit}>\n                    <CCardBody>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"name\">Name</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.name} id=\"name\" name=\"name\" value={category.name} onChange={handleCategoryChange} />\n                          <CInvalidFeedback>Name cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CCol md=\"3\">\n                          <CLabel htmlFor=\"description\">Description</CLabel>\n                        </CCol>\n                        <CCol xs=\"12\" md=\"9\">\n                          <CInput invalid={error.description} id=\"description\" name=\"description\" value={category.description} onChange={handleCategoryChange} />\n                          <CInvalidFeedback>Description cannot be empty</CInvalidFeedback>\n                        </CCol>\n                      </CFormGroup>\n                    </CCardBody>\n                    <CCardFooter>\n                      <CButton \n                        type=\"submit\"\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"info\"\n                      >\n                        Save changes\n                      </CButton> \n                      <CButton\n                        size=\"md\"\n                        shape=\"pill\"\n                        color=\"danger\"\n                        onClick={() => props.history.goBack()}\n                      >\n                        Cancel\n                      </CButton>\n                    </CCardFooter>\n                  </CForm>\n                </CCard>\n              </CCol>\n            </CRow>\n          )\n      }\n    </>\n  )\n};\n\nexport default UpdateUser;","import React, { useState, FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../redux/actions/authAction';\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCollapse,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CNavbar,\n  CNavbarNav,\n  CNavbarBrand,\n  CNavLink,\n  CDropdown,\n  CForm,\n  CInput,\n  CButton,\n  CImg\n} from '@coreui/react'\n\nconst NavBar = () => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector((state: any) => state.authReducer.isLogin);\n\n  return (\n    <>\n      {\n        isLogin\n          ? (\n            <CNavbar expandable=\"sm\" color=\"info\" >\n              <CNavbarBrand>\n                Book Management\n              </CNavbarBrand>\n              <CNavbarNav>\n                <CNavLink to=\"/home\">Home</CNavLink>\n                <CDropdown inNav >\n                  <CDropdownToggle color=\"primary\">\n                    User\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>\n                      <CNavLink className=\"text-dark\" to=\"/users/all\">Users</CNavLink>\n                    </CDropdownItem>\n                    <CDropdownItem>\n                      <CNavLink className=\"text-dark\" to=\"/users/new\">New User</CNavLink>\n                    </CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CDropdown inNav >\n                  <CDropdownToggle color=\"primary\">\n                    Book\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>\n                      <CNavLink className=\"text-dark\" to=\"/books/all\">Books</CNavLink>\n                    </CDropdownItem>\n                    <CDropdownItem>\n                      <CNavLink className=\"text-dark\" to=\"/books/new\">New Book</CNavLink>\n                    </CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CDropdown inNav >\n                  <CDropdownToggle color=\"primary\">\n                    Author\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>\n                      <CNavLink className=\"text-dark\" to=\"/authors/all\">Authors</CNavLink>\n                    </CDropdownItem>\n                    <CDropdownItem>\n                      <CNavLink className=\"text-dark\" to=\"/authors/new\">New Author</CNavLink>\n                    </CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CDropdown inNav >\n                  <CDropdownToggle color=\"primary\">\n                    Category\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>\n                      <CNavLink className=\"text-dark\" to=\"/categories/all\">Categories</CNavLink>\n                    </CDropdownItem>\n                    <CDropdownItem>\n                      <CNavLink className=\"text-dark\" to=\"/categories/new\">New Category</CNavLink>\n                    </CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CNavbarNav>\n              <CNavbarNav className=\"ml-auto\">\n                <CForm inline>\n                  <CInput\n                    className=\"mr-sm-2\"\n                    placeholder=\"Search\"\n                    size=\"sm\"\n                  />\n                  <CButton color=\"light\" className=\"my-2 my-sm-0\" type=\"submit\">Search</CButton>\n                </CForm>\n                {\n                  isLogin\n                    ? <CNavLink className=\"text-white\" to=\"/\" onClick={() => dispatch(logout())} >Logout</CNavLink>\n                    : <CNavLink className=\"text-white\" to=\"/\" >Sign in</CNavLink>\n                }\n              </CNavbarNav>\n            </CNavbar>\n          )\n          : null\n      }\n    </>\n  );\n}\n\nexport default NavBar;","import React, { useEffect, useState, FC } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport routes from './routes';\nimport NavBar from './components/common/NavBar';\nimport './scss/style.scss';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <Switch>\n          {routes.map( data => {\n            return (\n              <Route exact={data.exact} path={data.path} component={data.component}/>\n            )\n          })}\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}